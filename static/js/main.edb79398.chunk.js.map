{"version":3,"sources":["App.js","index.js"],"names":["days","selectedDay","Date","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginTop","spacing","marginLeft","marginRight","width","formControl","margin","minWidth","Task","marginBottom","TaskContent","paddingTop","paddingBottom","gridTemplateColumns","gridTemplateAreas","TaskText","gridArea","cursor","root","padding","DeleteIcon","color","marks","value","label","Showtask","task","kk","classes","useState","randomColor","bg","Card","className","style","backgroundColor","CardContent","minDeviceWidth","Typography","variant","component","text","time","duration","maxDeviceWidth","mobile","onClick","postData","then","data","window","location","reload","console","log","Showselectedtasks","tasks","map","index","Filtertasks","props","i","selectedTasks","length","date","start","getFullYear","getMonth","getDate","recurse","getDay","push","SimpleDialog","onAdd","onClose","open","values","setValues","end","setEnd","handleClose","handleChange","event","target","name","Dialog","aria-labelledby","DialogTitle","id","TextField","onChange","required","type","defaultValue","toString","InputLabelProps","shrink","gutterBottom","Slider","e","v","step","min","max","valueLabelDisplay","FormControl","InputLabel","Select","labelId","MenuItem","DialogActions","Button","preventDefault","a","url","fetch","method","mode","cache","credentials","redirect","referrerPolicy","body","JSON","stringify","App","React","setOpen","jj","setJj","useEffect","axios","result","fetchData","toLocaleString","IconButton","aria-label","obj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.edb79398.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport MediaQuery from \"react-responsive\";\nimport { randomColor } from \"randomcolor\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport axios from 'axios';\nimport Slider from '@material-ui/core/Slider';\n\nvar days = [\"yeshanbe\", \"doshanbe\", \"seshanbe\", \"charshanbe\", \"panshanbe\", \"jome\", \"shanbe\"];\nvar selectedDay = new Date();\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  Task: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    marginLeft: \"16px\",\n    marginRight: \"16px\"\n  },\n  TaskContent: {\n    paddingTop: \"24px\",\n    paddingBottom: \"24px\",\n    display: \"grid\",\n    gridTemplateColumns: \"20fr 1fr\",\n    gridTemplateAreas: '\"task trash\"'\n  },\n  TaskText: {\n    gridArea: \"task\",\n    cursor: \"default\",\n    \n  },\n  root: {\n    width: 290,\n    padding:\"16px\",\n    paddingBottom: \"0px\",\n    marginBottom: \"0px\"\n  },\n  DeleteIcon: { gridArea: \"trash\", color: \"#808080\", cursor: \"pointer\" },\n}));\n\nconst marks = [\n  {\n    value: 5,\n    label: '5m',\n  },\n  {\n    value: 20,\n    label: '20m',\n  },\n  {\n    value: 60,\n    label: '1h',\n  },\n  {\n    value: 120,\n    label: '2h',\n  },\n];\n\nfunction Showtask(task){\n  var kk = task.value;\n  const classes = useStyles();\n  const mobile = 700;\n  const [bg,setBg]=useState(randomColor());\n  const deletekon = () => {\n    postData('https://cloud.pdcommunity.ir/timeblox/delete.php', kk)\n            .then(data => {\n              window.location.reload();\n            console.log(data); // JSON data parsed by data.json() call\n            })\n  };\n  return(\n      <Card\n        className={classes.Task}\n        style={{ backgroundColor: bg }}\n      >\n        <CardContent className={classes.TaskContent}>\n          <MediaQuery minDeviceWidth={mobile}>\n            <Typography\n              variant=\"body1\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.TaskText}\n            >\n              {kk.text}\n              {\" for \"+kk.time.duration+\" minutes\"}\n            </Typography>\n          </MediaQuery>\n          <MediaQuery maxDeviceWidth={mobile - 1}>\n            <Typography\n              variant=\"body1\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.TaskText}\n            >\n              {kk.text}\n              {\" for \"+kk.time.duration+\" minutes\"}  \n            </Typography>\n          </MediaQuery>\n          <DeleteOutlineIcon\n            className={classes.DeleteIcon}\n            onClick={deletekon}\n          />\n        </CardContent>\n      </Card>\n    \n  );\n}\n\nfunction Showselectedtasks(tasks){\n  return( \n  <div>\n      {tasks.value.map((value, index) => {\n        return <Showtask value={value}/>\n      })}    </div>\n  );\n}\n\nfunction Filtertasks(props){\n  var tasks = props.value;\n  var selectedTasks = [];\n\n    var i;\n    for (i =0 ; i < tasks.length ; i++ ){\n      var date = new Date(tasks[i].time.start);\n      if ((date.getFullYear() === selectedDay.getFullYear() && date.getMonth() === selectedDay.getMonth() && date.getDate() === selectedDay.getDate()) || (tasks[i].time.recurse === \"weekly\" && date.getDay() === selectedDay.getDay())){\n        selectedTasks.push(tasks[i]);\n      }}\n    return(\n      <div>\n        <Showselectedtasks value={selectedTasks}/>\n      </div>\n    );\n}\n\nfunction SimpleDialog(props) {\n  const { onAdd, onClose, open } = props;\n  const classes = useStyles();\n  const [values, setValues] = useState({});\n  const [end, setEnd] = useState(\"30\");\n  const handleClose = () => {\n    onClose();\n  }\nconst handleAdd = (event) => {\n  event.preventDefault();\n  let kk ={time:{start:values.start, recurse:values.recurse, duration:end},text:values.text};\n  onAdd(kk);\n  onClose();\n}\n\nconst handleChange = (event) => {\n  //event.persist();\n  setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n};\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"form-dialog-title\" open={open} >\n      <DialogTitle id=\"form-dialog-title\">Create a new Timeblock</DialogTitle>\n      <TextField\n        name=\"start\"\n        value={values.start}\n        onChange={handleChange} \n        required\n        id=\"datetime-local\"\n        label=\"Choose start date and time\"\n        type=\"datetime-local\"\n        defaultValue={selectedDay.toString}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        defaultValue=\"\"\n      />\n      <div className={classes.root}>\n      <Typography id=\"discrete-slider\" gutterBottom>\n        Duration:\n      </Typography>\n      <Slider\n        name=\"end\"\n        onChange={(e, v) => setEnd(v)}\n        defaultValue={30}\n        step={5}\n        marks={marks}\n        min={5}\n        max={120}\n        valueLabelDisplay=\"auto\"\n      />\n      </div>\n      <TextField required id=\"standard-required\" label=\"Task\" className={classes.textField} name=\"text\" value={values.text}\n        onChange={handleChange} />\n      <FormControl className={classes.formControl} required>\n        <InputLabel id=\"demo-simple-select-label\">Recurse</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          name=\"recurse\"\n          value={values.recurse}\n          onChange={handleChange} \n          defaultValue = \"\"\n        >\n          <MenuItem value={\"weekly\"}>Weekly</MenuItem>\n          <MenuItem value={\"daily\"}>Daily</MenuItem>\n          <MenuItem value={\"onetime\"}>One time</MenuItem>\n        </Select>\n      </FormControl>\n      \n      <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\" onClick={handleAdd}>\n            Add\n          </Button>\n      </DialogActions>\n    </Dialog>\n  );}\n\n  async function postData(url = '', data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'no-cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n  \n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    //return response.json(); // parses JSON response into native JavaScript objects\n    }\n    \n    \nfunction App() {\n  const [open, setOpen] = React.useState(false);\n  const [jj, setJj] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        'https://cloud.pdcommunity.ir/timeblox/showjson.php',\n      );\n      setJj(result.data);\n    }\n    fetchData();\n  }, []);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleAdd = (obj) =>{\n\n    //var url = 'https://cloud.pdcommunity.ir/timeblox/setjson.php?'+ JSON.stringify(obj);\n    postData('https://cloud.pdcommunity.ir/timeblox/setjson.php', obj)\n    .then(data => {\n      window.location.reload();\n    console.log(data); // JSON data parsed by data.json() call\n    });\n  }\n  return (\n    \n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div id='kk'>{selectedDay.toLocaleString('fa-IR')\n.toString()}\n        <IconButton aria-label=\"delete\" color=\"primary\" onClick={handleClickOpen}>\n          <AddCircleIcon />\n        </IconButton>\n        <SimpleDialog onAdd={handleAdd} open={open} onClose={handleClose} />\n        </div>\n      <div>{days[selectedDay.getDay()]}</div>\n      <Filtertasks value={jj}/>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}