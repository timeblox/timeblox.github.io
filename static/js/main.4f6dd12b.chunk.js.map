{"version":3,"sources":["App.js","index.js"],"names":["days","selectedDay","Date","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginTop","spacing","marginLeft","marginRight","width","formControl","margin","minWidth","Task","marginBottom","TaskContent","paddingTop","paddingBottom","gridTemplateColumns","gridTemplateAreas","TaskText","gridArea","cursor","root","padding","DeleteIcon","color","input","marks","value","label","Showtask","task","kk","classes","useState","randomColor","bg","time","start","Card","className","style","backgroundColor","CardContent","minDeviceWidth","Typography","variant","component","toHHMMM","parseInt","duration","text","maxDeviceWidth","mobile","onClick","postData","then","data","window","location","reload","console","log","Showselectedtasks","props","map","index","Filtertasks","dur","i","tasks","selected","selectedDate","selectedTasks","deft","length","date","getFullYear","getMonth","getDate","recurse","getDay","push","sort","a","b","getHours","getMinutes","dat","num","deftt","split","hours","Math","floor","minutes","toHHMM","SimpleDialog","onAdd","onClose","open","values","setValues","end","setEnd","handleClose","handleChange","event","target","name","Dialog","aria-labelledby","DialogTitle","id","TextField","onChange","required","type","InputLabelProps","shrink","defaultValue","gutterBottom","Slider","e","v","step","min","max","valueLabelDisplay","FormControl","InputLabel","Select","labelId","MenuItem","DialogActions","Button","preventDefault","url","fetch","method","mode","cache","credentials","redirect","referrerPolicy","body","JSON","stringify","App","React","setOpen","jj","setJj","setDeft","setSelectedDate","useEffect","axios","result","fetchData","toLocaleString","utils","DateFnsUtils","InputProps","Grid","justify","disableToolbar","format","KeyboardButtonProps","obj","Fab","aria-label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f6dd12b.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { Card, CardContent, Typography } from \"@material-ui/core\";\nimport MediaQuery from \"react-responsive\";\nimport { randomColor } from \"randomcolor\";\nimport DeleteOutlineIcon from \"@material-ui/icons/DeleteOutline\";\nimport axios from 'axios';\nimport Slider from '@material-ui/core/Slider';\nimport DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport Grid from '@material-ui/core/Grid';\n\n\nvar days = [\"yeshanbe\", \"doshanbe\", \"seshanbe\", \"charshanbe\", \"panshanbe\", \"jome\", \"shanbe\"];\nvar selectedDay = new Date();\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  Task: {\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    marginLeft: \"16px\",\n    marginRight: \"16px\"\n  },\n  TaskContent: {\n    paddingTop: \"24px\",\n    paddingBottom: \"24px\",\n    display: \"grid\",\n    gridTemplateColumns: \"20fr 1fr\",\n    gridTemplateAreas: '\"task trash\"'\n  },\n  TaskText: {\n    gridArea: \"task\",\n    cursor: \"default\",\n    \n  },\n  root: {\n    width: 280,\n    padding:\"16px\",\n    paddingBottom: \"0px\",\n    marginBottom: \"0px\"\n  },\n  DeleteIcon: { gridArea: \"trash\", color: \"#808080\", cursor: \"pointer\" },\n  input: {\n    color: \"white\"\n  \n  }\n}));\n\nconst marks = [\n  {\n    value: 5,\n    label: '5m',\n  },\n  {\n    value: 20,\n    label: '20m',\n  },\n  {\n    value: 60,\n    label: '1h',\n  },\n  {\n    value: 120,\n    label: '2h',\n  },\n];\n\nfunction Showtask(task){\n  var kk = task.value;\n  const classes = useStyles();\n  const mobile = 700;\n  const [bg,setBg]=useState(randomColor());\n  const deletekon = () => {\n    postData('https://cloud.pdcommunity.ir/timeblox/delete.php', kk)\n            .then(data => {\n              window.location.reload();\n            console.log(data); // JSON data parsed by data.json() call\n            })\n  };\n  const dd = new Date(kk.time.start);\n  return(\n      <Card\n        className={classes.Task}\n        style={{ backgroundColor: bg }}\n      >\n        <CardContent className={classes.TaskContent}>\n          <MediaQuery minDeviceWidth={mobile}>\n            <Typography\n              variant=\"body1\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.TaskText}\n            >\n              {toHHMMM(kk.time.start,0)+\"-\"+toHHMMM(kk.time.start,parseInt(kk.time.duration))+\" \"}\n              {kk.text}\n              {\" for \"+kk.time.duration+\" minutes\"}\n            </Typography>\n          </MediaQuery>\n          <MediaQuery maxDeviceWidth={mobile - 1}>\n            <Typography\n              variant=\"body1\"\n              color=\"textSecondary\"\n              component=\"p\"\n              className={classes.TaskText}\n            >\n              {kk.text}\n              {\" for \"+kk.time.duration+\" minutes\"}  \n            </Typography>\n          </MediaQuery>\n          <DeleteOutlineIcon\n            className={classes.DeleteIcon}\n            onClick={deletekon}\n          />\n        </CardContent>\n      </Card>\n    \n  );\n}\n\nfunction Showselectedtasks(props){\n  return( \n  <div>\n      {props.value.map((value, index) => {\n        return <Showtask value={value}/>\n      })}    </div>\n  );\n}\n\nfunction Filtertasks(props){\n  var tasks = props.value;\n  var selected = props.selectedDate;\n  var selectedTasks = [];\n  var deft = \"\";\n  var dur;\n    var i;\n    for (i =0 ; i < tasks.length ; i++ ){\n      var date = new Date(tasks[i].time.start);\n      if ((date.getFullYear() === selected.getFullYear() && date.getMonth() === selected.getMonth() && date.getDate() === selected.getDate()) || (tasks[i].time.recurse === \"weekly\" && date.getDay() === selected.getDay()) || (tasks[i].time.recurse === \"daily\")){\n        selectedTasks.push(tasks[i]);\n        deft = tasks[i].time.start;\n        dur = tasks[i].time.duration;\n      }}\n    selectedTasks.sort((a, b) => ( new Date(a.time.start).getHours()*60+ new Date(a.time.start).getMinutes()) - (new Date(b.time.start).getHours()*60+ new Date(b.time.start).getMinutes()));\n    props.deft(toHHMM(deft,dur))\n    return(\n      <div>\n        <Showselectedtasks value={selectedTasks}/>\n      </div>\n    );\n}\n\nfunction SimpleDialog(props) {\n  const { onAdd, onClose, open, deft} = props;\n  const classes = useStyles();\n  const [values, setValues] = useState({});\n  const [end, setEnd] = useState(\"30\");\n  const handleClose = () => {\n    onClose();\n  }\nconst handleAdd = (event) => {\n  event.preventDefault();\n  let kk ={time:{start:values.start, recurse:values.recurse, duration:end},text:values.text};\n  onAdd(kk);\n  onClose();\n}\n\nconst handleChange = (event) => {\n  //event.persist();\n  setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n};\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"form-dialog-title\" open={open} >\n      <DialogTitle id=\"form-dialog-title\">Create a new Timeblock</DialogTitle>\n      <TextField\n        name=\"start\"\n        value={values.start}\n        onChange={handleChange} \n        required\n        id=\"datetime-local\"\n        label=\"Choose start date and time\"\n        type=\"datetime-local\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        defaultValue={deft}\n      />\n      <div className={classes.root}>\n      <Typography id=\"discrete-slider\" gutterBottom>\n        Duration:\n      </Typography>\n      <Slider\n        name=\"end\"\n        onChange={(e, v) => setEnd(v)}\n        defaultValue={30}\n        step={5}\n        marks={marks}\n        min={5}\n        max={120}\n        valueLabelDisplay=\"auto\"\n      />\n      </div>\n      <TextField required id=\"standard-required\" label=\"Task\" className={classes.textField} name=\"text\" value={values.text}\n        onChange={handleChange} />\n      <FormControl className={classes.formControl} required>\n        <InputLabel id=\"demo-simple-select-label\">Recurse</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          name=\"recurse\"\n          value={values.recurse}\n          onChange={handleChange} \n          defaultValue = \"\"\n        >\n          <MenuItem value={\"weekly\"}>Weekly</MenuItem>\n          <MenuItem value={\"daily\"}>Daily</MenuItem>\n          <MenuItem value={\"onetime\"}>One time</MenuItem>\n        </Select>\n      </FormControl>\n      \n      <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\" onClick={handleAdd}>\n            Add\n          </Button>\n      </DialogActions>\n    </Dialog>\n  );}\n\n  async function postData(url = '', data = {}) {\n    // Default options are marked with *\n    const response = await fetch(url, {\n    method: 'POST', // *GET, POST, PUT, DELETE, etc.\n    mode: 'no-cors', // no-cors, *cors, same-origin\n    cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n    credentials: 'same-origin', // include, *same-origin, omit\n  \n    redirect: 'follow', // manual, *follow, error\n    referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n    body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    });\n    //return response.json(); // parses JSON response into native JavaScript objects\n    }\n    \n    \nfunction App() {\n  const [open, setOpen] = React.useState(false);\n  const [jj, setJj] = useState([]);\n  const classes = useStyles();\n  // auto fill next date 👇🏻\n  const [deft, setDeft] = useState();\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        'https://cloud.pdcommunity.ir/timeblox/showjson.php',\n      );\n      setJj(result.data);\n    }\n    fetchData();\n  }, []);\n  const handleDeft = (time) => {\n    setDeft(time);\n  };\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleAdd = (obj) =>{\n    //var url = 'https://cloud.pdcommunity.ir/timeblox/setjson.php?'+ JSON.stringify(obj);\n    postData('https://cloud.pdcommunity.ir/timeblox/setjson.php', obj)\n    .then(data => {\n      window.location.reload();\n    console.log(data); // JSON data parsed by data.json() call\n    });\n  }\n  return (\n    \n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div id='kk'>\n      <div>{selectedDay.toLocaleString('fa-IR').split('،‏')[0]+\"  \"}\n{days[selectedDay.getDay()]}</div>\n      <MuiPickersUtilsProvider utils={DateFnsUtils} InputProps={{ className: classes.input }}>\n      <Grid container justify=\"space-around\">\n      <KeyboardDatePicker\n          disableToolbar\n          variant=\"inline\"\n          format=\"yyyy/MM/dd\"\n          margin=\"normal\"\n          id=\"date-picker-inline\"\n          label=\"Date picker inline\"\n          value={selectedDate}\n          onChange={handleDateChange}\n          KeyboardButtonProps={{\n            'aria-label': 'change date',\n          }}\n          InputProps={{ className: classes.input }}\n        />\n        </Grid>\n        </MuiPickersUtilsProvider>\n\n        \n        <SimpleDialog onAdd={handleAdd} open={open} onClose={handleClose} deft={deft}/>\n        </div>\n      <Filtertasks value={jj} deft={handleDeft} selectedDate={selectedDate}/>\n      <Fab color=\"primary\" aria-label=\"add\" onClick={handleClickOpen}>\n        <AddIcon marginTop=\"100px\"/>\n        </Fab>\n      </header>\n\n    </div>\n  );\n}\n\n function toHHMM(deft, dur) {\n  var dat = new Date(deft);\n  var num = (dat.getHours()*60 + dat.getMinutes()) + parseInt(dur);\n  var deftt = deft.split(\"T\");\n  var hours   = Math.floor(num / 60);\n  var minutes = Math.floor((num - (hours * 60)));\n  if (hours   < 10) {hours   = \"0\"+hours;}\n  if (minutes < 10) {minutes = \"0\"+minutes;}\n  return deftt[0]+\"T\"+hours+':'+minutes;\n}\nfunction toHHMMM(deft, dur) {\n  var dat = new Date(deft);\n  var num = (dat.getHours()*60 + dat.getMinutes()) + parseInt(dur);\n  //var deftt = deft.split(\"T\");\n  var hours   = Math.floor(num / 60);\n  var minutes = Math.floor((num - (hours * 60)));\n  if (hours   < 10) {hours   = \"0\"+hours;}\n  if (minutes < 10) {minutes = \"0\"+minutes;}\n  return hours+':'+minutes;\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}