{"version":3,"sources":["App.js","index.js"],"names":["days","selectedDay","Date","useStyles","makeStyles","theme","container","display","flexWrap","textField","marginTop","spacing","marginLeft","marginRight","width","formControl","margin","minWidth","Showtask","task","kk","value","Container","maxWidth","Typography","component","style","backgroundColor","borderRadius","color","text","time","duration","Showselectedtasks","tasks","map","index","Filtertasks","props","i","selectedTasks","length","date","start","getFullYear","getMonth","getDate","recurse","getDay","push","SimpleDialog","onAdd","onClose","open","classes","useState","values","setValues","handleClose","handleChange","event","persist","target","name","Dialog","aria-labelledby","DialogTitle","id","TextField","onChange","required","label","type","defaultValue","toString","className","InputLabelProps","shrink","end","inputProps","step","FormControl","InputLabel","Select","labelId","MenuItem","DialogActions","Button","onClick","preventDefault","App","React","setOpen","jj","setJj","toLocaleString","IconButton","aria-label","obj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.244510e0.chunk.js","sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { DialogContent } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\n\nvar json = '[{\"time\":{\"start\":\"2021-03-24T12:00:00+04:30\", \"recurse\":\"weekly\", \"duration\":120}, \"text\":\"study\"}, {\"time\":{\"start\":\"2021-03-26T20:00:00+04:30\", \"recurse\":\"onetime\", \"duration\":15}, \"text\":\"train something\"}]';\nvar days = [\"yeshanbe\", \"doshanbe\", \"seshanbe\", \"charshanbe\", \"panshanbe\", \"jome\", \"shanbe\"];\nvar selectedDay = new Date();\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginTop: theme.spacing(1),\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 300,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nfunction Showtask(task){\n  var kk = task.value;\n  return(\n    <div>\n      <Container maxWidth='sm'>\n      <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', borderRadius: \"4px\", color: \"black\", margin: 30}} >\n      {kk.text}\n      {\" for \"+kk.time.duration+\" minutes\"}\n      </Typography>\n      </Container>\n    </div>\n  );\n}\n\nfunction Showselectedtasks(tasks){\n  return( \n  <div>\n      {tasks.value.map((value, index) => {\n        return <Showtask value={value}/>\n      })}    </div>\n  );\n}\n\nfunction Filtertasks(props){\n  var tasks = props.value;\n  var selectedTasks = [];\n\n    var i;\n    for (i =0 ; i < tasks.length ; i++ ){\n      var date = new Date(tasks[i].time.start);\n      if ((date.getFullYear() === selectedDay.getFullYear() && date.getMonth() === selectedDay.getMonth() && date.getDate() === selectedDay.getDate()) || (tasks[i].time.recurse === \"weekly\" && date.getDay() === selectedDay.getDay())){\n        selectedTasks.push(tasks[i]);\n      }}\n    return(\n      <div>\n        <Showselectedtasks value={selectedTasks}/>\n      </div>\n    );\n}\n\nfunction SimpleDialog(props) {\n  const { onAdd, onClose, open } = props;\n  const classes = useStyles();\n  const [values, setValues] = useState({});\n\n  const handleClose = () => {\n    onClose();\n  }\nconst handleAdd = (event) => {\n  event.preventDefault();\n  let kk ={time:{start:values.start, recurse:values.recurse, duration:values.end},text:values.text};\n  onAdd(kk);\n  onClose();\n}\n\nconst handleChange = (event) => {\n  event.persist();\n  setValues(values => ({ ...values, [event.target.name]: event.target.value }));\n};\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"form-dialog-title\" open={open} >\n      <DialogTitle id=\"form-dialog-title\">Create a new Timeblock</DialogTitle>\n      <TextField\n        name=\"start\"\n        value={values.start}\n        onChange={handleChange} \n        required\n        id=\"datetime-local\"\n        label=\"Choose start date and time\"\n        type=\"datetime-local\"\n        defaultValue={selectedDay.toString}\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n        <TextField\n        name=\"end\"\n        value={values.end}\n        onChange={handleChange} \n        required\n        id=\"time\"\n        label=\"End time\"\n        type=\"time\"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        inputProps={{\n          step: 300, // 5 min\n        }}\n      />\n      <TextField required id=\"standard-required\" label=\"Task\" defaultValue=\"Study\" className={classes.textField} name=\"text\"         value={values.text}\n        onChange={handleChange} />\n      <FormControl className={classes.formControl} required>\n        <InputLabel id=\"demo-simple-select-label\">Recurse</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          name=\"recurse\"\n          value={values.recurse}\n          onChange={handleChange} \n        >\n          <MenuItem value={\"weekly\"}>Weekly</MenuItem>\n          <MenuItem value={\"onetime\"}>One time</MenuItem>\n        </Select>\n      </FormControl>\n      \n      <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button  color=\"primary\" onClick={handleAdd}>\n            Add\n          </Button>\n      </DialogActions>\n    </Dialog>\n  );}\n\nfunction App() {\n  const [open, setOpen] = React.useState(false);\n  const [jj, setJj] = useState([{time:{start:\"2021-03-27T12:00:00+04:30\", recurse:\"weekly\", duration:120}, text:\"study\"}, {time:{start:\"2021-03-26T20:00:00+04:30\", recurse:\"onetime\", duration:15}, text:\"train something\"}]);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleAdd = (obj) =>{\n    setJj([...jj,obj]);\n  }\n  return (\n    \n    <div className=\"App\">\n      <header className=\"App-header\">\n      <div id='kk'>{selectedDay.toLocaleString('fa-IR')\n.toString()}\n        <IconButton aria-label=\"delete\" color=\"primary\" onClick={handleClickOpen}>\n          <AddCircleIcon />\n        </IconButton>\n        <SimpleDialog onAdd={handleAdd} open={open} onClose={handleClose} />\n        </div>\n      <div>{days[selectedDay.getDay()]}</div>\n      <Filtertasks value={jj}/>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}